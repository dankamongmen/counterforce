#!/bin/sh

set -e

MQTT=$(which mosquitto_pub)
TOPIC=sensors/strangelet

[ -n "$MQTTUSER" ] || { echo "export MQTT username as MQTTUSER" >&2 ; exit 1 ; }
[ -n "$MQTTPASS" ] || { echo "export MQTT password as MQTTPASS" >&2 ; exit 1 ; }
[ -n "$MQTTHOST" ] || { echo "export MQTT server as MQTTHOST" >&2 ; exit 1 ; }

# swallow errors so we don't exit. no arguments.
mqttflush() {
  "$MQTT" --id strangelet -h "$MQTTHOST" -t "$TOPIC" -m "{$POST}" -u "$MQTTUSER" -P "$MQTTPASS" || \
    { echo "error publishing to mqtt: $POST" >&2 ; }
}

# arguments: topic (key), message.
mqtt() {
  if [ -z "$POST" ] ; then
    POST="\"$1\":$2"
  else
    POST="$POST, \"$1\":$2"
  fi
}

# prints bytes RX from a /proc/net/dev line provided as $*
procnetdevrx() {
  echo $* | sed -e 's/ *//' | cut -d\  -f2
}

# prints bytes TX from a /proc/net/dev line provided as $*
procnetdevtx() {
  echo $* | sed -e 's/ *//' | cut -d\  -f10
}

stripnum() {
  echo "$@" | tr -d -c .[:digit:]-
}

while true ; do
  POST=""
  UPSEC=$(cut -d\  -f1 < /proc/uptime)
  mqtt uptimesec $UPSEC

  CPUIDX=0
  for i in `ipmi-sensors | grep 'CPU..Temp' | cut -d\| -f4` ; do
    mqtt tctl$CPUIDX "`stripnum $i`"
    CPUIDX=$((CPUIDX + 1))
  done

  PCH=$(ipmi-sensors | grep 'PCH.Temp' | cut -d\| -f4)
  mqtt pch "`stripnum $i`"

  # load average
  LOAD=$(cut -d\  -f1 < /proc/loadavg)
  mqtt loadavg $LOAD

  # network
  for i in ixgbe1 ixgbe0 ; do
    STATS=$(cat /proc/net/dev | grep $i:) # FIXME continue on error
    if [ -n "$STATS" ] ; then
      RX=$(procnetdevrx $STATS)
      TX=$(procnetdevtx $STATS)
      mqtt nicrxb$i $RX
      mqtt nictxb$i $TX
    fi
  done

  FANIDX=1
  for i in `ipmi-sensors | grep 'FAN.' | cut -d\| -f4` ; do
    RPM=`stripnum $i`
    if [ -z "$RPM" ] ; then
      RPM=0
    fi
    mqtt fan$FANIDX "$RPM"
    FANIDX=$((FANIDX + 1))
  done

  mqttflush
  sleep 15
done
