#!/bin/sh

set -e

MQTT=$(which mosquitto_pub)
TOPIC=sensors/amoled
MQTTHOST=10.128.0.1

[ -n "$MQTTUSER" ] || { echo "export MQTT username as MQTTUSER" >&2 ; exit 1 ; }
[ -n "$MQTTPASS" ] || { echo "export MQTT password as MQTTPASS" >&2 ; exit 1 ; }

# arguments: topic (key), message. swallow errors so we don't exit.
mqtt() {
  "$MQTT" --id amoled -h "$MQTTHOST" -t "$TOPIC" -m "{\"$1\":$2}" -u "$MQTTUSER" -P "$MQTTPASS" || \
    { echo "error publishing to mqtt" >&2 ; }
}

while true ; do
  # rpi temp sensor
  TCTL=$(sensors -j | jq '."cpu_thermal-virtual-0".temp1.temp1_input') 2> /dev/null
  "$MQTT" -h "$MQTTHOST" -t "$TOPIC" -m "{\"rpi4temp\":$TCTL}" -u "$MQTTUSER" -P "$MQTTPASS" \
    || { echo "Failed publishing to MQTT" >&2 ; }

  # rpi voltage
  PIVOLTS=$(vcgencmd measure_volts | cut -d= -f2 | cut -dV -f1)
  "$MQTT" -h "$MQTTHOST" -t "$TOPIC" -m "{\"rpi4volts\":$PIVOLTS}" -u "$MQTTUSER" -P "$MQTTPASS" \
    || { echo "Failed publishing to MQTT" >&2 ; }

  UPSEC=$(cut -d\  -f1 < /proc/uptime)
  mqtt uptimesec $UPSEC

  # load average
  LOAD=$(cut -d\  -f1 < /proc/loadavg)
  mqtt loadavg $LOAD

  DBM=$(iw dev wlan0 link | grep signal | cut -d: -f2- | cut -dd -f1 | tr -d [:space:])
  mqtt signaldbm $DBM

  sleep 15
done
