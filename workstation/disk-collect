#!/bin/sh

set -e

MQTT=$(which mosquitto_pub)
TOPIC=sensors/schwarzgerät

[ -n "$MQTTUSER" ] || { echo "export MQTT username as MQTTUSER" >&2 ; exit 1 ; }
[ -n "$MQTTPASS" ] || { echo "export MQTT password as MQTTPASS" >&2 ; exit 1 ; }

# swallow errors so we don't exit. no arguments.
mqttflush() {
  "$MQTT" --id schwarzgerät -t "$TOPIC" -m "{$POST}" -u "$MQTTUSER" -P "$MQTTPASS" || \
    { echo "error publishing to mqtt: $POST" >&2 ; }
}

# arguments: topic (key), message.
mqtt() {
  if [ -z "$POST" ] ; then
    POST="\"$1\":$2"
  else
    POST="$POST, \"$1\":$2"
  fi
}

while true ; do
  POST=""
  # SATA disks
  DISKTEMPS=$(sensors -j | jq '.[]|select(.Adapter|test("SCSI adapter"))|.sata.temp1_input')
  DIDX=0
  for i in $DISKTEMPS ; do
    mqtt sata$DIDX $i
    DIDX=$((DIDX + 1))
  done

  # NVMe disks
  for i in /dev/nvme? ; do
    # text looks like: "temperature				: 50°C (323 Kelvin)"
    # in some error cases, a negative value is returned; elide these
    TEMP=$(nvme smart-log $i | grep ^temperature | cut -d\( -f1 | tr -d -c .[:digit:]-)
    S=$(echo $i | cut -d/ -f3)
    if [ "$TEMP" -ge 0 ] ; then
      mqtt "$S"temp $TEMP
    fi
  done

  # fs availability
  for i in / /home /media/qwop /media/qwopino ; do
    AVAIL=$(df $i --output=avail | sed -e 1d)
    TOTAL=$(df $i --output=size | sed -e 1d)
    PCENT=`jq -n \(1-$AVAIL/$TOTAL\)*100`
    NAME="fs`basename $i | sed -e 's/\//root/'`"
    mqtt "$NAME" $PCENT
  done

  mqttflush
  sleep 15
done
